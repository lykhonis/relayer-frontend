CREATE EXTENSION IF NOT EXISTS moddatetime
	SCHEMA "extensions";

CREATE TYPE public.tasks_status AS ENUM ('unknown', 'pending', 'completed', 'failed');

CREATE TABLE IF NOT EXISTS public.tasks
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY (INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1),
    created_at timestamp with time zone NOT NULL DEFAULT now(),
    updated_at timestamp with time zone DEFAULT now(),
    uuid text COLLATE pg_catalog."default" NOT NULL CHECK (uuid = lower(uuid)),
    transaction_hash text COLLATE pg_catalog."default" NOT NULL CHECK (transaction_hash = lower(transaction_hash)),
    status public.tasks_status NOT NULL DEFAULT 'unknown'
) TABLESPACE pg_default;

CREATE INDEX ON public.tasks (uuid);

CREATE TRIGGER handle_tasks_updated_at
    BEFORE UPDATE 
    ON public.tasks
    FOR EACH ROW
    EXECUTE FUNCTION extensions.moddatetime('updated_at');

ALTER TABLE IF EXISTS public.tasks
    OWNER to postgres;

ALTER TABLE public.tasks ENABLE ROW LEVEL SECURITY;

GRANT ALL ON TABLE public.tasks TO postgres;
GRANT SELECT ON TABLE public.tasks TO anon;
GRANT SELECT, INSERT, UPDATE ON TABLE public.tasks TO service_role;
